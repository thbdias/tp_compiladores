S -> { D | C}*

D ->

C -> '{' { CA | CR | CT | CL } '}'

CA -> id '=' EXP

CR -> 'while' EXP C 

CT -> 'if' EXP 'then' C [ 'else' C]

CL -> 'readln' ',' id ';' 

EXP -> EXPs [ (< | <= | >= | > | <> | ==) EXPs]

EXPs -> [ +|- ] T {( +|-|or ) T}*

T -> F{( *|/|and|)F }*

F -> valor | id | not F | '(' EXP ')'